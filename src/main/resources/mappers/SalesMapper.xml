<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SalesMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type) 명시 -->
	<resultMap id="salesMap" type="study.spring.surisulsul.model.Sales">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column) 연결 -->
		<result property="id" column="id" />
		<result property="p_id" column="p_id" />
		<result property="p_name" column="p_name" />
		<result property="p_price" column="p_price" />
		<result property="total_qty" column="total_qty" />
		<result property="total_price" column="total_price" />
		<result property="edit_date" column="edit_date" />
	</resultMap>
	
	<!-- 
		order_sub테이블에서 p_id로 묶어서 group by 
		-> 걔를 몇개인지 얻어와서 total_qty로 삽입
		-> 그러면 group by로 select를 하는 구문은 OrderMapper에 있고 
		-> select해온 값을 Sales객체에 .setTotal_qty()
		-> input으로 Impl에 넘기면 Impl이 insertSales를 호출하고
		-> SalesMapper에서 insertSales가 받아온 input 객체 내 값을 통해 INSERT 구문 수행
	-->
	
	<!-- 상품별 주문 수량 CHECK 및 sales TABLE에 판매 내역 INSERT -->
	<insert id="insertSales" parameterType="study.spring.surisulsul.model.Sales" useGeneratedKeys="true" keyProperty="sub_id">
		INSERT INTO sales
			(p_id, p_name, p_price, total_qty, total_price, edit_date)
		VALUES
			(#{p_id}, #{p_name}, #{p_price}, #{total_qty}, #{p_price}*#{total_qty}, now());			
	</insert>
	
	<!-- sales에서 select해오는 SQL 구문 (=> Best_item 페이지에서 사용) -->
	<!-- bestitem controller 메서드에서 select로 상품별 total qty를 기준으로 DESC LIMIT 0,12이렇게 끊어서 가져오기-->
	
	<!-- 매출 전체 데이터 수 조회하기 -->
	<select id="selectCountAll" parameterType="study.spring.surisulsul.model.Sales"
	resultType="int">
	SELECT COUNT(*) FROM sales
	</select> 
</mapper>