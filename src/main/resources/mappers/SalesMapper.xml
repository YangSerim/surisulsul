<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SalesMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type) 명시 -->
	<resultMap id="salesMap" type="study.spring.surisulsul.model.Sales">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column) 연결 -->
		<result property="id" column="id" />
		<result property="p_id" column="p_id" />
		<result property="total_qty" column="total_qty" />
		<result property="total_price" column="total_price" />
		<result property="edit_date" column="edit_date" />
	</resultMap>
	
	<!-- 상품별 주문 수량 CHECK 및 sales TABLE에 판매 내역 INSERT -->
	<insert id="insertSales" parameterType="study.spring.surisulsul.model.Sales" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sales
			(p_id, total_qty, total_price, edit_date)
		VALUES
			(#{p_id}, 0, 0, now());			
	</insert>
	
	<!-- 
		order_sub테이블에서 오늘날짜에 해당하는 주문들을 p_id로 묶어서 group by 
		-> 걔를 몇개인지 얻어와서 total_qty로,
		-> 상품가격과 주문 수량을 곱해 얻은 값을 total_price로
		-> 그리고 기존 sales에 있는 total_qty / total_price를 얻어서 오늘 것과 합산
		-> 그러고 나서 UPDATE 구문 수행!
	-->
	
	<!-- sales 테이블에 UPDATE하기 전에 orders_sub에서 받아올 SELECT-GROUP BY 내용 -->
	<select id="selectTodaySales" parameterType="study.spring.surisulsul.model.Sales" resultMap="salesMap">
		SELECT p_id, SUM(qty) AS total_qty, p_price*SUM(qty) AS total_price
		FROM orders_sub
		WHERE o_date=#{edit_date}
		GROUP BY p_id
		ORDER BY p_id;
	</select>
	
	<!-- 기존에 있던 sales 상세 내용 불러오기 (합산용) -->
	<select id="selectSalesDetails" parameterType="study.spring.surisulsul.model.Sales" resultMap="salesMap">
		SELECT total_qty, total_price FROM sales where p_id=#{p_id};
	</select>
	
	<!-- 오늘 total값들과 기존 total 값들을 합산 한 후에 수행할 UPDATE SQL 구문 -->
	<update id="updateSales" parameterType="study.spring.surisulsul.model.Sales">
		UPDATE sales SET total_qty=#{total_qty}, total_price=#{total_price}
		WHERE p_id=#{p_id};
	</update>
	
	<!-- sales에서 select해오는 SQL 구문 (=> Best_item 페이지에서 사용) -->
	<!-- bestitem controller 메서드에서 select로 상품별 total qty를 기준으로 DESC LIMIT 0,12이렇게 끊어서 가져오기-->
	
	<!-- 매출 전체 데이터 수 조회하기 -->
	<select id="selectCountAll" parameterType="study.spring.surisulsul.model.Sales"
	resultType="int">
	SELECT COUNT(*) FROM sales
	</select> 
</mapper>