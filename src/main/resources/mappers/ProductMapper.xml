<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
	<resultMap id="productMap"
		type="study.spring.surisulsul.model.Product">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="price" column="price" />
		<result property="type" column="type" />
		<result property="loc" column="loc" />
		<result property="key1" column="key1" />
		<result property="key2" column="key2" />
		<result property="sweet" column="sweet" />
		<result property="sour" column="sour" />
		<result property="degree" column="degree" />
		<result property="igd" column="igd" />
		<result property="size" column="size" />
		<result property="des1" column="des1" />
		<result property="des2" column="des2" />
		<result property="food" column="food" />
		<result property="img" column="img" />
		<result property="star" column="star" />
		<result property="reg_date" column="reg_date" />
		<result property="edit_date" column="edit_date" />
		<result property="jn_result" column="jn_result" />

		<result property="types" column="types" />
		<result property="locs" column="locs" />
		<result property="keys" column="keys" />
		<result property="sweet1" column="sweet1" />
		<result property="sweet2" column="sweet2" />
		<result property="sour1" column="sour1" />
		<result property="sour2" column="sour2" />
		<result property="degree1" column="degree1" />
		<result property="degree2" column="degree2" />
		<result property="search" column="search" />

		<result property="total_qty" column="total_qty" />
		<result property="p_id" column="p_id" />
		<result property="m_id" column="m_id" />
		<result property="wish" column="wish" />
		<result property="basket" column="basket" />
	</resultMap>
	
	<!-- wishlist에 존재하는 상품 조회 -->
	<select id="wishlistProductList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT p.id, img, name, price
		FROM products p
		INNER JOIN wishlist w
		ON p.id=w.p_id
			<where>
				m_id='${m_id}'
			</where> 
		ORDER BY w.reg_date desc
	</select>

	<!-- 주능 결과 4개 상품 조회 -->
	<select id="jnItemList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price, jn_result
		FROM products p
		<where>
			<if test="jn_result != null and jn_result != ''">
				jn_result = '${jn_result}'
			</if>
		</where>
		ORDER BY RAND()
		LIMIT 0, 4
	</select>

	<!-- 상품 베스트 12개 목록 조회 : best_items -->
	<select id="bestItemList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price, star, type, loc, key1,
			   key2, sweet, sour, degree, food, size, igd, des1, des2, jn_result
		FROM products p
		INNER JOIN
		sales s ON p.id=s.p_id
		ORDER BY s.total_qty ASC
		LIMIT 0, 12
	</select>

	<!-- 상품 베스트 12개 목록 조회 : best_items -> 매출내역이 없을 경우 비싼가격순으로 정렬하여 12개 상품목록 
		보여줌 -->
	<select id="bestItemList_price"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price, star, type, loc, key1,
			   key2, sweet, sour, degree, food, size, igd, des1, des2, jn_result
		FROM products
		ORDER BY price DESC
		LIMIT 0, 12
	</select>

	<!-- 상품 베스트 4개 목록 조회 : main -->
	<select id="mainbestItemList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price
		FROM products
		ORDER BY price DESC
		LIMIT 0, 4
	</select>

	<!-- 조건에 맞는 상품 목록 조회 : item_filtered -->
	<select id="filteredItemList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price, star, type, loc, key1
		FROM products
		<where>

			<if test="types != null and types != ''">
				type IN (${types})
			</if>
			<if test="locs != null and locs != ''">
				AND loc IN (${locs})
			</if>
			<if test="keys != null and keys != ''">
				AND ((key1 IN (${keys})) OR (key2 IN (${keys})))
			</if>
			<if
				test="(sweet1 != null and sweet1 != '') and (sweet2 != null and sweet2 != '')">
				AND (sweet = #{sweet1} OR sweet = #{sweet2})
			</if>
			<if
				test="(sour1 != null and sour1 != '') and (sour2 != null and sour2 != '')">
				AND (sour = #{sour1} OR sour = #{sour2})
			</if>
			<if test="degree1 != null and degree1 != ''">
				AND degree &gt;= #{degree1}
				<if test="degree2 != null and degree2 != ''">
					AND degree &lt;= #{degree2}
				</if>
			</if>
			<if test="search != null and search != ''">
				AND name LIKE concat('%', #{search}, '%')
			</if>

		</where>

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 상품 상세 정보 조회 :item_details -->
	<select id="detailsItem"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, des1, igd, size, price, star
		FROM products
		WHERE id=#{id};
	</select>

	<!-- 상품 정보 조회 : item_info -->
	<select id="infoItem"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, name, sweet, sour, degree, type, loc, key1, key2, jn_result, des2, food
		FROM products
		WHERE id=#{id};
	</select>

	<!-- 종류별 상품 목록 조회 : extra -->
	<select id="typesItemList"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT id, img, name, price, star, type, loc, key1
		FROM products
		WHERE
		type = #{type}

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 상품 데이터 수 조회하기 -->
	<select id="selectCountAll"
		parameterType="study.spring.surisulsul.model.Product" resultType="int">
		SELECT COUNT(*) FROM products
		<where>

			<if test="types != null and types != ''">
				type IN (${types})
			</if>
			<if test="locs != null and locs != ''">
				AND loc IN (${locs})
			</if>
			<if test="keys != null and keys != ''">
				AND ((key1 IN (${keys})) OR (key2 IN (${keys})))
			</if>
			<if
				test="(sweet1 != null and sweet1 != '') and (sweet2 != null and sweet2 != '')">
				AND (sweet = #{sweet1} OR sweet = #{sweet2})
			</if>
			<if
				test="(sour1 != null and sour1 != '') and (sour2 != null and sour2 != '')">
				AND (sour = #{sour1} OR sour = #{sour2})
			</if>
			<if test="degree1 != null and degree1 != ''">
				AND degree &gt;= #{degree1}
				<if test="degree2 != null and degree2 != ''">
					AND degree &lt;= #{degree2}
				</if>
			</if>
			<if test="search != null and search != ''">
				AND name LIKE concat('%', #{search}, '%')
			</if>

		</where>
	</select>
	
	<!-- 전체 상품 목록 조회 : manage_itemlist -->
	<select id="allItemlist"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		SELECT * FROM products
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 상품 데이터 저장 -->
	<insert id="insertItem"
		parameterType="study.spring.surisulsul.model.Product"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO products
		(name, price, type, loc, key1, key2, sweet, sour, degree, igd,
		size, des1, des2, food, img, star, reg_date, edit_date, jn_result)
		VALUES (#{name}, #{price}, #{type}, #{loc}, #{key1}, #{key2},
		#{sweet}, #{sour}, #{degree}, #{igd}, #{size}, #{des1}, #{des2},
		#{food}, #{img}, 0, now(), now(), #{jn_result})
	</insert>

	<!-- 상품 데이터 수정 -->
	<update id="updateItem"
		parameterType="study.spring.surisulsul.model.Product">
		UPDATE products SET
			id=#{id},
			name=#{name},
			price=#{price},
			type=#{type},
			loc=#{loc},
			key1=#{key1},
			key2=#{key2},
			sweet=#{sweet},
			sour=#{sour},
			degree=#{degree},
			igd=#{igd},
			size=#{size},
			des1=#{des1},
			des2=#{des2},
			food=#{food},
			img=#{img},
			star=#{star},
			jn_result=#{jn_result},
			edit_date=now()
		WHERE id=#{id};
	</update>
	
	<update id="starUpdateItem"
		parameterType="study.spring.surisulsul.model.Product">
		UPDATE products SET
			star=#{star}
		WHERE id=#{id};
	</update>

	<!-- 상품 데이터 삭제 -->
	<delete id="deleteItem"
		parameterType="study.spring.surisulsul.model.Product">
		DELETE FROM products WHERE id=#{id};
	</delete>
	
	<!-- ================================================================================== 
	!!!!!!!!!!!!!!!!!!!!!! 여기서부터 관리자 페이지 관련 SQL 구문 !!!!!!!!!!!!!!!!!!!!!! 
	========================================================================================= -->
	<!-- wishlist 개수 + 상품명 조회 :id순-->
	<select id="selectItemCount"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		select p.id as id, name, count(w.p_id) as wish, count(b.p_id) as basket
		from products p
		left outer join wishlist w on p.id=w.p_id
		left outer join basket b on p.id=b.p_id
		group by p.id
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- wishlist 개수 + 상품명 조회 :인기순 -->
	<select id="selectItemCountByWish"
		parameterType="study.spring.surisulsul.model.Product"
		resultMap="productMap">
		select p.id as id, name, count(w.p_id) as wish, count(b.p_id) as basket
		from products p
		left outer join wishlist w on p.id=w.p_id
		left outer join basket b on p.id=b.p_id
		group by p.id
		order by wish desc
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
</mapper> 
